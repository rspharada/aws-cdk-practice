'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
exports.CdkCloudFrontS3StaticWebSiteStack = void 0
const aws_cdk_lib_1 = require('aws-cdk-lib')
class CdkCloudFrontS3StaticWebSiteStack extends aws_cdk_lib_1.Stack {
	constructor(scope, id, props) {
		super(scope, id, props)
		// 1. OriginとなるS3 Bucket作成する。
		const bucketName = this.node.tryGetContext('s3').bucketName
		const websiteBucket = new aws_cdk_lib_1.aws_s3.Bucket(this, 'S3Bucket', {
			// s3バケット名を設定する。
			bucketName: bucketName,
			// Bucketへの直接アクセス禁止する。
			accessControl: aws_cdk_lib_1.aws_s3.BucketAccessControl.PRIVATE,
			// SES-3暗号化を有効にします。
			encryption: aws_cdk_lib_1.aws_s3.BucketEncryption.S3_MANAGED,
			// バブリックアクセスをブロックする。
			blockPublicAccess: aws_cdk_lib_1.aws_s3.BlockPublicAccess.BLOCK_ALL,
			// バージョニングを有効にする。
			versioned: true,
			// CDK Stack削除時にBucketも削除する。
			removalPolicy: aws_cdk_lib_1.RemovalPolicy.DESTROY,
			// 静的ウェブサイトホスティングを設定する。
			websiteIndexDocument: 'index.html',
			websiteErrorDocument: 'index.html',
		})
		// 2. Origin Access Identity作成する。
		const websiteIdentity =
			new aws_cdk_lib_1.aws_cloudfront.OriginAccessIdentity(
				this,
				'WebsiteIdentity',
				{
					comment: 'website-identity',
				},
			)
		// 3. Origin Access Identityからのアクセスのみを許可するBucket Policyを作成する。
		const webSiteBucketPolicyStatement =
			new aws_cdk_lib_1.aws_iam.PolicyStatement({
				effect: aws_cdk_lib_1.aws_iam.Effect.ALLOW,
				actions: ['s3:GetObject'],
				resources: [`${websiteBucket.bucketArn}/*`],
				principals: [
					new aws_cdk_lib_1.aws_iam.CanonicalUserPrincipal(
						websiteIdentity.cloudFrontOriginAccessIdentityS3CanonicalUserId,
					),
				],
			})
		// 4. Bucket PolicyをS3 Bucketに適用する。
		websiteBucket.addToResourcePolicy(webSiteBucketPolicyStatement)
		// 5. CloudFront Distributionを作成
		const websiteDistribution =
			new aws_cdk_lib_1.aws_cloudfront.CloudFrontWebDistribution(
				this,
				'WebsiteDistribution',
				{
					comment: 'website-distribution',
					errorConfigurations: [
						{
							errorCachingMinTtl: 300,
							errorCode: 403,
							responseCode: 200,
							responsePagePath: '/index.html',
						},
						{
							errorCachingMinTtl: 300,
							errorCode: 404,
							responseCode: 200,
							responsePagePath: '/index.html',
						},
					],
					// 6. DistributionにOrigin情報（S3 Bucket、Origin Access Identity）を設定
					originConfigs: [
						{
							s3OriginSource: {
								s3BucketSource: websiteBucket,
								originAccessIdentity: websiteIdentity,
							},
							behaviors: [
								{
									allowedMethods:
										aws_cdk_lib_1.aws_cloudfront.CloudFrontAllowedMethods
											.GET_HEAD,
									cachedMethods:
										aws_cdk_lib_1.aws_cloudfront.CloudFrontAllowedCachedMethods
											.GET_HEAD,
									isDefaultBehavior: true,
									viewerProtocolPolicy:
										aws_cdk_lib_1.aws_cloudfront.ViewerProtocolPolicy
											.REDIRECT_TO_HTTPS,
								},
							],
						},
					],
					// 料金クラス：北米、欧州、アジア、中東、アフリカを使用する
					priceClass: aws_cdk_lib_1.aws_cloudfront.PriceClass.PRICE_CLASS_200,
				},
			)
		// S3に静的ファイルをアップロードする。
		new aws_cdk_lib_1.aws_s3_deployment.BucketDeployment(
			this,
			'WebsiteDeploy',
			{
				sources: [aws_cdk_lib_1.aws_s3_deployment.Source.asset('./web/build')],
				destinationBucket: websiteBucket,
				distribution: websiteDistribution,
				distributionPaths: ['/*'],
			},
		)
	}
}
exports.CdkCloudFrontS3StaticWebSiteStack = CdkCloudFrontS3StaticWebSiteStack
//# sourceMappingURL=data:application/json;base64,
