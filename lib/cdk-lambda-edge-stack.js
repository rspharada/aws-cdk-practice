"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CdkLambdaEdgeStack = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const path_1 = require("path");
class CdkLambdaEdgeStack extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        // 1. Lambda@Edge関数を作成する
        // https://docs.aws.amazon.com/cdk/api/v1/docs/aws-cloudfront-readme.html#lambdaedge
        const env = this.node.tryGetContext('env');
        const context = this.node.tryGetContext(env);
        const websiteBasicAuthFunction = new aws_cdk_lib_1.aws_cloudfront.experimental.EdgeFunction(this, 'websiteBasicAuthFunction', {
            functionName: context.name,
            description: `${context.description}`,
            handler: 'index.handler',
            runtime: aws_cdk_lib_1.aws_lambda.Runtime.NODEJS_14_X,
            timeout: aws_cdk_lib_1.Duration.minutes(5),
            code: aws_cdk_lib_1.aws_lambda.Code.fromAsset(path_1.join(__dirname, `../src/lambdaEdge/${env}`)),
        });
        // 2.Lambda@EdgeのARNを出力する。
        new aws_cdk_lib_1.CfnOutput(this, 'CdkLambdaEdgeStackArnOutput', {
            exportName: 'websiteBasicAuthFunctionArn',
            value: websiteBasicAuthFunction.functionArn,
        });
    }
}
exports.CdkLambdaEdgeStack = CdkLambdaEdgeStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrLWxhbWJkYS1lZGdlLXN0YWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2RrLWxhbWJkYS1lZGdlLXN0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQVFvQjtBQUNwQiwrQkFBMkI7QUFJM0IsTUFBYSxrQkFBbUIsU0FBUSxtQkFBSztJQUM1QyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQWtCO1FBQzNELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFBO1FBQ3ZCLHdCQUF3QjtRQUN4QixvRkFBb0Y7UUFDcEYsTUFBTSxHQUFHLEdBQVcsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDbEQsTUFBTSxPQUFPLEdBQWlCLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBQzFELE1BQU0sd0JBQXdCLEdBQUcsSUFBSSw0QkFBVSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQ3hFLElBQUksRUFDSiwwQkFBMEIsRUFDMUI7WUFDQyxZQUFZLEVBQUUsT0FBTyxDQUFDLElBQUk7WUFDMUIsV0FBVyxFQUFFLEdBQUcsT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUNyQyxPQUFPLEVBQUUsZUFBZTtZQUN4QixPQUFPLEVBQUUsd0JBQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztZQUNuQyxPQUFPLEVBQUUsc0JBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzVCLElBQUksRUFBRSx3QkFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQzFCLFdBQUksQ0FBQyxTQUFTLEVBQUUscUJBQXFCLEdBQUcsRUFBRSxDQUFDLENBQzNDO1NBQ0QsQ0FDRCxDQUFBO1FBQ0QsMEJBQTBCO1FBQzFCLElBQUksdUJBQVMsQ0FBQyxJQUFJLEVBQUUsNkJBQTZCLEVBQUU7WUFDbEQsVUFBVSxFQUFFLDZCQUE2QjtZQUN6QyxLQUFLLEVBQUUsd0JBQXdCLENBQUMsV0FBVztTQUMzQyxDQUFDLENBQUE7SUFDSCxDQUFDO0NBQ0Q7QUEzQkQsZ0RBMkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0U3RhY2ssXG5cdFN0YWNrUHJvcHMsXG5cdGF3c19jbG91ZGZyb250IGFzIGNsb3VkZnJvbnQsXG5cdGF3c19sYW1iZGEgYXMgbGFtYmRhLFxuXHREdXJhdGlvbixcblx0Q2ZuT3V0cHV0LFxuXHRGbixcbn0gZnJvbSAnYXdzLWNkay1saWInXG5pbXBvcnQgeyBqb2luIH0gZnJvbSAncGF0aCdcbmltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gJ2NvbnN0cnVjdHMnXG5pbXBvcnQgeyBTdGFnZUNvbnRleHQgfSBmcm9tICcuL2ludGVyZmFjZSdcblxuZXhwb3J0IGNsYXNzIENka0xhbWJkYUVkZ2VTdGFjayBleHRlbmRzIFN0YWNrIHtcblx0Y29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM/OiBTdGFja1Byb3BzKSB7XG5cdFx0c3VwZXIoc2NvcGUsIGlkLCBwcm9wcylcblx0XHQvLyAxLiBMYW1iZGFARWRnZemWouaVsOOCkuS9nOaIkOOBmeOCi1xuXHRcdC8vIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9jZGsvYXBpL3YxL2RvY3MvYXdzLWNsb3VkZnJvbnQtcmVhZG1lLmh0bWwjbGFtYmRhZWRnZVxuXHRcdGNvbnN0IGVudjogc3RyaW5nID0gdGhpcy5ub2RlLnRyeUdldENvbnRleHQoJ2VudicpXG5cdFx0Y29uc3QgY29udGV4dDogU3RhZ2VDb250ZXh0ID0gdGhpcy5ub2RlLnRyeUdldENvbnRleHQoZW52KVxuXHRcdGNvbnN0IHdlYnNpdGVCYXNpY0F1dGhGdW5jdGlvbiA9IG5ldyBjbG91ZGZyb250LmV4cGVyaW1lbnRhbC5FZGdlRnVuY3Rpb24oXG5cdFx0XHR0aGlzLFxuXHRcdFx0J3dlYnNpdGVCYXNpY0F1dGhGdW5jdGlvbicsXG5cdFx0XHR7XG5cdFx0XHRcdGZ1bmN0aW9uTmFtZTogY29udGV4dC5uYW1lLFxuXHRcdFx0XHRkZXNjcmlwdGlvbjogYCR7Y29udGV4dC5kZXNjcmlwdGlvbn1gLFxuXHRcdFx0XHRoYW5kbGVyOiAnaW5kZXguaGFuZGxlcicsXG5cdFx0XHRcdHJ1bnRpbWU6IGxhbWJkYS5SdW50aW1lLk5PREVKU18xNF9YLFxuXHRcdFx0XHR0aW1lb3V0OiBEdXJhdGlvbi5taW51dGVzKDUpLFxuXHRcdFx0XHRjb2RlOiBsYW1iZGEuQ29kZS5mcm9tQXNzZXQoXG5cdFx0XHRcdFx0am9pbihfX2Rpcm5hbWUsIGAuLi9zcmMvbGFtYmRhRWRnZS8ke2Vudn1gKSxcblx0XHRcdFx0KSxcblx0XHRcdH0sXG5cdFx0KVxuXHRcdC8vIDIuTGFtYmRhQEVkZ2Xjga5BUk7jgpLlh7rlipvjgZnjgovjgIJcblx0XHRuZXcgQ2ZuT3V0cHV0KHRoaXMsICdDZGtMYW1iZGFFZGdlU3RhY2tBcm5PdXRwdXQnLCB7XG5cdFx0XHRleHBvcnROYW1lOiAnd2Vic2l0ZUJhc2ljQXV0aEZ1bmN0aW9uQXJuJyxcblx0XHRcdHZhbHVlOiB3ZWJzaXRlQmFzaWNBdXRoRnVuY3Rpb24uZnVuY3Rpb25Bcm4sXG5cdFx0fSlcblx0fVxufVxuIl19